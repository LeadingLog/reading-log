name: Java CI/CD with Gradle and Docker

on:
  push:
    branches: [ "backdev" ]

permissions:
  contents: read

jobs:
  spring-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Create application.properties
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.APPLICATION_PROPERTIES }}" | base64 --decode > src/main/resources/application.properties

    - name: Grant Execute Permission & Build with Gradle (skip tests)
      run: |
        cd ReadingLogBackend
        chmod +x gradlew
        ./gradlew build -x test

    - name: Docker Hub Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_ID }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: |
        cd ReadingLogBackend
        docker build -t ${{ secrets.DOCKERHUB_ID }}/readinglog-app:latest .


    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKERHUB_ID }}/readinglog-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: spring-build  

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create .env file
      run: |
        echo "NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> .env
        echo "NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}" >> .env
        echo "NAVER_REDIRECT_URI=${{ secrets.NAVER_REDIRECT_URI }}" >> .env
        echo "KAKAO_API_KEY=${{ secrets.KAKAO_API_KEY }}" >> .env
        echo "KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}" >> .env
    
    - name: Copy .env and docker-compose.yml to GCP instance
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.GCP_HOST }}
        username: ${{ secrets.GCP_USERNAME }}
        key: ${{ secrets.GCP_PRIVATEKEY }}
        port: 22
        source: ".env,ReadingLogBackend/docker-compose.yml"
        target: "/home/readingLog"
        overwrite: true
        strip_components: 3
        debug: true

    - name: GCP에 배포
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.GCP_HOST }}
        username: ${{ secrets.GCP_USERNAME }}
        key: ${{ secrets.GCP_PRIVATEKEY }}
        port: 22
        script: |
          sudo docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          sudo docker pull ${{ secrets.DOCKERHUB_ID }}/readinglog-app:latest
          cd /home/readingLog
          sudo docker-compose down || true
          sudo docker-compose up -d --remove-orphans
          sudo docker image prune -f
